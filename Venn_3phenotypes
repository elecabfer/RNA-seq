setwd("~/Desktop/RNA/Selene/results/limma_means/")
path<-("~/Desktop/RNA/Selene/results/limma_means/")
########## EXCEL GENE_EXPRESSION
excel<-read.delim("means_gene_expression_rpkm5.txt", row.names=1)    #excel gene_expression
gen<-excel[,29]
genline<-cbind(row.names(excel[gen,]), gen)#[98:105]
########## con todos los files
file.names <- dir(path, pattern ="limma_")
archivos=""
for(i in (1:length(file.names))){  
  ####################
  inters_up=""
  inters_under=""
  ab_up=""
  ab_under=""
  ba_up=""
  ba_under=""
  filei <- read.delim(file.names[i],header=TRUE, stringsAsFactors=FALSE)
  nombre<-""  #tipo de variable (string)
  #nombre$j<-  gsub(file.names[i], "txt")#substr(file.names[i], 5, length(file.names[i])-3) #substraer el nombre de la experiencia
  input<-list() #tipo de variable (lista)
  inputi=list(
    filei$GeneName[which(filei$logFC > 1 )]  , #file$i$adj.P.Val  < 0.05 |
    filei$GeneName[which(filei$logFC < -1 )]  # file$i$adj.P.Val  < 0.05 |
  )
  names(inputi) <- c(paste("up",i,sep=""), paste("under",i,sep=""))
  for(j in (1:length(file.names))){
    if (file.names[i] != file.names[j]){
      filej <- read.delim(file.names[j],header=TRUE, stringsAsFactors=FALSE)
      inputj=list(
        filej$GeneName[which(filej$logFC > 1 )]  , #file$j$adj.P.Val  < 0.05 |    #### upregulated
        filej$GeneName[which(filej$logFC < -1 )]  # file$j$adj.P.Val  < 0.05 |      ### under regulated
      )
      names(inputj) <- c("up", "under")
      ####################
      inters_up=""
      inters_under=""
      ab_up=""
      ab_under=""
      ba_up=""
      ba_under=""
      ###################################### UP regulated 2 
      f1up<-inputi$up
      f1under<-inputi$under
      f2up<-inputj$up  
      f2under<-inputj$under 
      inters_up = intersect(c(f1up), c(f2up))
      inters_upb=paste(inters_up, genline[1][match(noquote(inters_up), genline[2])])
      ab_up= (setdiff(c(f1up), c(f2up)))  #A up
      ba_up=(setdiff(c(f2up), c(f1up))) #B up
      ###################################### UNDER regulated 2 
      inters_under = (intersect(c(f1under), c(f2under))) # intersection up
      ab_under=(setdiff(c(f1under), c(f2under)))  #A up
      ba_under=(setdiff(c(f2under), c(f1under))) #B up
      m<-paste(inters_upb, ab_up, ba_up, inters_under, ab_under, ba_under, sep="\t")
      #colnames(m)<-c("inters_up", "ab_up, ba_up", "inters_under", "ab_under", "ba_under", sep="\t")
      write.csv(m, file=paste("A", file.names[i], "B", file.names[j], sep="_"), quote=F ,  row.names=F ) #, sep="\t" )
      archivos<-rbind(archivos, cbind(paste("A:", file.names[i], "B:", file.names[j], sep=" "), length(inters_up), length(ab_up), length(ba_up), length(inters_under), length(ab_under), length(ba_under), sep="\t"), sep="\t")
    }    
  }
}
colnames(archivos)<-c("File name","Intersection overexpressed", "A-B overexpressed", "B-A overexpressed", "Intersection underexpressed", "A-B underexpressed", "B-A underexpressed", sep="\t")
write.table(archivos, file="Summary.txt", quote=F ,  row.names=F, col.names = T, sep="\t")
